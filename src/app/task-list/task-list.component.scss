@import "../../variables.scss";

button{
    font-size: $f-xs;
    margin: 0 $s-sm $s-sm 0;
    padding: 1px 5px;
    width: 25px;
    height: 25px;
}

.task-container {
    padding: $s-sm;
}

.tasklist {
    padding-left: $s-sm;
}

.list-item {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
}

.test {
    display: flex;
    flex-direction: row;
}
    
li {
    font-size: $f-md;
    list-style-type: none;
    vertical-align: top;
}

label {
    position: relative;

}

// .box {
//     float: right;
// }

// .box.unchecked:after {
//     content: "\2610";
//     color: red;
// }

// .box:after {
//     content: "\2611";
//     color:green;
// }

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
    background: transparent;
    border: 0.1px solid $turquoise;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color: $turquoise-tint;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
    background-color: transparent;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid $turquoise;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}